/** 8 Way Demultiplexor **/
//The 8 Way Dmux chip takes an input and sends it to one of four
//output pins, based on the value of the 3bit selector.
//If sel=000 then {a=in, b=c=d=e=f=g=h=0}
//else if sel=001 then {b=in, a=c=d=e=f=g=h=0}
//else if sel=010 then {c=in, a=b=d=e=f=g=h=0}
//else if sel=011 then {d=in, a=b=c=e=f=g=h=0}
//else if sel=100 then {e=in, a=b=c=d=f=g=h=0}
//else if sel=101 then {f=in, a=b=c=d=e=g=h=0}
//else if sel=110 then {g=in, a=b=c=d=e=f=h=0}
//else if sel=111 then {h=in, a=b=c=d=e=f=g=0}

CHIP DMux8Way {

IN in, sel[3];
OUT a, b, c, d, e, f, g, h;

PARTS:

//First we flip each the selector bits for future use.
Not(in=sel[0], out=notsel0);
Not(in=sel[1], out=notsel1);
Not(in=sel[2], out=notsel2);

//Second, we check if both the input, notsel0, notsel1 and notsel2 are true.
//The output is then sent to a.
And4Way(a=in, b=notsel0, c=notsel1, d=notsel2, out=a);
//Third, we check if both the input, sel0, notsel1, notsel2 are true.
//The output is then sent to b.
And4Way(a=in, b=sel[0], c=notsel1, d=notsel2, out=b);
//Fourth, we check if both the input, notsel0, sel1 and notsel2 are true.
//The output is then sent to c.
And4Way(a=in, b=notsel0, c=sel[1], d=notsel2, out=c);
//Fifth, we check if both the input, sel0, sel1, notsel2 are true.
//The output is then sent to d.
And4Way(a=in, b=sel[0], c=sel[1], d=notsel2, out=d);
//Sixth, we check if both the input, notsel0, notsel1, sel2 are true.
//The output is then sent to e.
And4Way(a=in, b=notsel0, c=notsel1, d=sel[2], out=e);
//Seventh, we check if both the input, sel0, notsel1 and sel2 are true.
//The output is then sent to f.
And4Way(a=in, b=sel[0], c=notsel1, d=sel[2], out=f);
//Eight, we check if both the input, notsel0, sel1, sel2 are true.
//The output is then sent to g.
And4Way(a=in, b=notsel0, c=sel[1], d=sel[2], out=g);
//Lastly, we check if both the input, sel0, sel1, sel2 are true.
//The output is then sent to h.
And4Way(a=in, b=sel[0], c=sel[1], d=sel[2], out=h);

}